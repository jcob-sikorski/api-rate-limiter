events {
    worker_connections 1024;  # Adjust the value based on your requirements
}

http {
    server {
        listen 80;

        location /go-rate-limiter/ {
            proxy_pass http://go-rate-limiter:8080;  # Adjust the port based on your Go rate limiter application
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /express-api/ {
            proxy_pass http://express-api:3000;  # Adjust the port based on your Node.js application
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            # Forward the request to the rate limiter as middleware
            proxy_pass http://go-rate-limiter:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Add other rate limiter-specific headers if needed
        }
    }
}
